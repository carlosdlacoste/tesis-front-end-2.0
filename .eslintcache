[{"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js":"1","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js":"2","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\index.js":"3","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Content\\Content.js":"4","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\login\\login.js":"5","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\TableItem.js":"6","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SidebarFooter\\SidebarFooter.js":"7","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\LoginButton\\LoginButton.js":"8","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Navbar\\Navbar.js":"9","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SidebarDetail\\SidebarDetail.js":"10","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\EditMessage\\EditMessage.js":"11","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js":"12","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\Nodes\\Nodes.js":"13","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js":"14","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\config\\settings\\settings.js":"15","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js":"16","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js":"17","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\projects\\projects.js":"18","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\versions\\versions.js":"19","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js":"20"},{"size":9078,"mtime":1666035230174,"results":"21","hashOfConfig":"22"},{"size":735,"mtime":1665867812887,"results":"23","hashOfConfig":"22"},{"size":877,"mtime":1654108556687,"results":"24","hashOfConfig":"22"},{"size":5823,"mtime":1654108556660,"results":"25","hashOfConfig":"22"},{"size":1065,"mtime":1654108556654,"results":"26","hashOfConfig":"22"},{"size":3216,"mtime":1665863475397,"results":"27","hashOfConfig":"22"},{"size":1037,"mtime":1654108556674,"results":"28","hashOfConfig":"22"},{"size":1758,"mtime":1654108556667,"results":"29","hashOfConfig":"22"},{"size":8446,"mtime":1654108556670,"results":"30","hashOfConfig":"22"},{"size":3835,"mtime":1654108556674,"results":"31","hashOfConfig":"22"},{"size":672,"mtime":1654108556662,"results":"32","hashOfConfig":"22"},{"size":648,"mtime":1654108556672,"results":"33","hashOfConfig":"22"},{"size":2315,"mtime":1665709096905,"results":"34","hashOfConfig":"22"},{"size":1723,"mtime":1665545740691,"results":"35","hashOfConfig":"22"},{"size":395,"mtime":1666032681718,"results":"36","hashOfConfig":"22"},{"size":8424,"mtime":1666035609866,"results":"37","hashOfConfig":"22"},{"size":3478,"mtime":1654108556673,"results":"38","hashOfConfig":"22"},{"size":2302,"mtime":1654108556655,"results":"39","hashOfConfig":"22"},{"size":2592,"mtime":1654108556656,"results":"40","hashOfConfig":"22"},{"size":2536,"mtime":1666035879275,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e4v55r",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js",["84","85"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js",["86","87"],"import { putMetrics } from \"../../api/metrics/metrics.js\";\r\n\r\nimport { postLogin } from \"../../api/login/login\"\r\n\r\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\r\n\r\n\r\n\r\n\r\nconst ManageMetrics = async (user, setUser, selectedProject, umbralName, setReloadSidebar) => {  \r\n    \r\n    await putMetrics(user,\r\n        selectedProject.projectIndex,\r\n        selectedProject.arcIndex,\r\n        selectedProject.verIndex,\r\n        umbralName);\r\n    \r\n      \r\n    window.location.reload()\r\n\r\n    // ModalMessage(\r\n    //     \"¡Metricas calculadas con exito!\",\r\n    //     \" \",\r\n    //     \"success\",\r\n    //     false,\r\n    //     4000\r\n    //   );\r\n    // setReloadSidebar(true);\r\n  };\r\n\r\n  export { ManageMetrics };","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\index.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Content\\Content.js",["88","89","90","91"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\login\\login.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\TableItem.js",["92"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\LoginButton\\LoginButton.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Navbar\\Navbar.js",["93"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\EditMessage\\EditMessage.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\Nodes\\Nodes.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\config\\settings\\settings.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js",["94"],"/**\r\n * Agregar un nodo al set\r\n * @param {String} id ID del nodo\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst addNode = (\r\n  id,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const temp = selectedNodes;\r\n  temp.add(id);\r\n  setSelectedNodes(temp);\r\n  setSelectionModel([...temp]);\r\n  changeNodeColor(cy, id, \"add\");\r\n  const edges = getEdges(cy, id);\r\n  changeEdgesColor(cy, edges, \"add\");\r\n};\r\n\r\n/**\r\n * Eliminar un nodo del set\r\n * @param {String} id ID del nodo\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst removeNode = (\r\n  id,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const temp = selectedNodes;\r\n  temp.delete(id);\r\n  setSelectedNodes(temp);\r\n  setSelectionModel([...temp]);\r\n  changeNodeColor(cy, id, \"remove\");\r\n  const edges = getEdges(cy, id);\r\n  changeEdgesColor(cy, edges, \"remove\");\r\n};\r\n\r\n/**\r\n * Manejar acción al hacer click en una\r\n * celda de la tabla\r\n * @param {String} nodeId\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst manageCellClick = (\r\n  nodeId,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  if (selectedNodes.has(nodeId)) {\r\n    removeNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = false;\r\n    repaintEdges(selectedNodes, cy);\r\n  } else {\r\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\r\n  }\r\n};\r\n\r\n/**\r\n * Cambiar el color del nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} nodeId ID del nodo\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeNodeColor = (cy, nodeId, type) => {\r\n  const backgroundColor = type === \"remove\" ? \"#18202C\" : \"#ffc74d\";\r\n  cy.getElementById(nodeId).animate(\r\n    {\r\n      style: {\r\n        \"background-color\": backgroundColor,\r\n      },\r\n    },\r\n    {\r\n      duration: 0,\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Obtener todas las aristas de\r\n * un nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} nodeId ID del nodo\r\n * @returns arreglo de objetos con info de aristas\r\n */\r\nconst getEdges = (cy, nodeId) => {\r\n  return cy.getElementById(nodeId).connectedEdges();\r\n};\r\n\r\n/**\r\n * Manejar el cambio de color de todas las aristas\r\n * de un nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Array} edges Arreglo de objetos con info de aristas\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeEdgesColor = (cy, edges, type) => {\r\n  edges.forEach((edge) => {\r\n    const edgeId = edge[\"_private\"][\"data\"].id;\r\n    changeEdgeColor(cy, edgeId, type);\r\n  });\r\n};\r\n\r\n/**\r\n * Cambiar el color de una arista\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} edgeId ID de la arista\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeEdgeColor = (cy, edgeId, type) => {\r\n  const backgroundColor = type === \"remove\" ? \"#18202C\" : \"#ffc74d\";\r\n  cy.getElementById(edgeId).style({\r\n    \"line-color\": backgroundColor,\r\n    \"target-arrow-color\": backgroundColor,\r\n  });\r\n};\r\n\r\n/**\r\n * Manejar selección de columna de nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst manageCheckSelection = (\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const nodes = cy.filter(\"nodes\");\r\n  if (selectedNodes.size > 0) {\r\n    removeAllNodes(selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n  } else {\r\n    addAllNodes(nodes, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n  }\r\n};\r\n\r\n/**\r\n * Deseleccionar todos los nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst removeAllNodes = (\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  selectedNodes.forEach((node) => {\r\n    removeNode(node, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(node)[\"_private\"][\"selected\"] = false;\r\n  });\r\n};\r\n\r\n/**\r\n * Seleccionar todos los nodos\r\n * @param {Array} nodeArray Arreglo de nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst addAllNodes = (\r\n  nodeArray,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  nodeArray.forEach((node) => {\r\n    const nodeId = node[\"_private\"][\"data\"].id;\r\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\r\n  });\r\n};\r\n\r\n/**\r\n * Repintar las aristas\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n */\r\nconst repaintEdges = (selectedNodes, cy) => {\r\n  selectedNodes.forEach((node) => {\r\n    const edges = getEdges(cy, node);\r\n    changeEdgesColor(cy, edges);\r\n  });\r\n};\r\n\r\n/**\r\n * Conseguir todos los nodos del proyecto\r\n * actualmente abierto\r\n * @param {JSON} selectedProject Objeto con información del proyecto actual\r\n * @returns Arreglo de objetos de tipo nodo\r\n */\r\nconst getNodeData = (selectedProject) => {\r\n  return selectedProject.elements.nodes.map((node, index) => ({\r\n    id: index,\r\n    name: node.data.name,\r\n    module: node.data.module,\r\n    isInterface: node.data.isInterface,\r\n    isAbstract: node.data.isAbstract,\r\n    incomompleteProperties: node.data.incomompleteProperties,\r\n  }));\r\n};\r\n\r\n/**\r\n * Conseguir todas las relaciones existentes\r\n * del proyecto actualmente abierto\r\n * @param {JSON} selectedProject Objeto con información del proyecto actual\r\n * @returns Arreglo de objetos de tipo aristas\r\n */\r\nconst getRelationData = (selectedProject) => {\r\n  return selectedProject.elements.edges?.map((edge, index) => {\r\n    return {\r\n      id: index,\r\n      source: edge.data.source,\r\n      target: edge.data.target,\r\n      relation: getRelationType(edge.scratch.relation),\r\n      dms: edge.hasOwnProperty('metrics') ? edge.metrics.DMS.value.toFixed(2) : '-',\r\n      abstractness: edge.hasOwnProperty('metrics') ? edge.metrics.abstractness?.value.toFixed(2) : '-',\r\n      coupling: edge.hasOwnProperty('metrics') ? edge.metrics.coupling.value.toFixed(2) : '-',\r\n      instability: edge.hasOwnProperty('metrics') ? edge.metrics.instability?.value.toFixed(2) : '-',\r\n      nameRessemblance: edge.hasOwnProperty('metrics') ? edge.metrics.nameRessemblance?.value.toFixed(2) : '-',\r\n      packageMapping: edge.hasOwnProperty('metrics') ? edge.metrics.packageMapping?.value.toFixed(2) : '-',\r\n    };\r\n  })\r\n};\r\n\r\n/**\r\n * Obtener el nombre de una relación\r\n * @param {String} relation Tipo de relación\r\n * @returns Nombre de la relación\r\n */\r\nconst getRelationType = (relation) => {\r\n  switch (relation) {\r\n    case \"implements\":\r\n      return \"Implementación\";\r\n    case \"extends\":\r\n      return \"Extensión\";\r\n    case \"use\":\r\n      return \"Use\"\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default {\r\n  addNode,\r\n  manageCellClick,\r\n  manageCheckSelection,\r\n  getNodeData,\r\n  getRelationData,\r\n  removeNode,\r\n  repaintEdges,\r\n};\r\n\r\nexport {\r\n  repaintEdges\r\n}\r\n","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\projects\\projects.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\versions\\versions.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js",[],{"ruleId":"95","severity":1,"message":"96","line":4,"column":3,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":162,"column":15,"nodeType":"101","messageId":"102","endLine":164,"endColumn":16},{"ruleId":"95","severity":1,"message":"103","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":19},{"ruleId":"95","severity":1,"message":"104","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":22},{"ruleId":"95","severity":1,"message":"105","line":23,"column":22,"nodeType":"97","messageId":"98","endLine":23,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":71,"column":11,"nodeType":"108","messageId":"109","endLine":71,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":166,"column":6,"nodeType":"112","endLine":166,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":172,"column":6,"nodeType":"112","endLine":172,"endColumn":19,"suggestions":"115"},{"ruleId":"95","severity":1,"message":"116","line":13,"column":10,"nodeType":"97","messageId":"98","endLine":13,"endColumn":19},{"ruleId":"95","severity":1,"message":"117","line":4,"column":22,"nodeType":"97","messageId":"98","endLine":4,"endColumn":30},{"ruleId":"118","severity":1,"message":"119","line":266,"column":1,"nodeType":"120","endLine":274,"endColumn":3},"no-unused-vars","'putMetrics' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'postLogin' is defined but never used.","'ModalMessage' is defined but never used.","'setSelectedProject' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectNodeHandler', 'setSelectedNodes', 'setSelectionModel', and 'unselectNodeHandler'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'setEdgesLabel'. Either include it or remove the dependency array.",["122"],"'TextField' is defined but never used.","'useTheme' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",{"range":"127","text":"128"},"Update the dependencies array to be: [checked, cy, setEdgesLabel]",{"range":"129","text":"130"},[4260,4264],"[cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",[4342,4355],"[checked, cy, setEdgesLabel]"]